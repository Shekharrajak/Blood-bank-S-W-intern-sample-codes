/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package centerstore.itemCategoryComponent;

import java.awt.Color;
import javax.swing.*;
import javax.swing.tree.*;
import java.awt.event.*;
import javax.swing.event.*;


//import database.*;
/**
 *
 * @author MinamRosh
 */
public class ItemCategoryView extends javax.swing.JDialog {

    /**
     * Creates new form ItemCategoryView
     * @param parent
     * @param model
     */
    public ItemCategoryView(JFrame parent, boolean model) {
        super(parent, model);
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ItemCategoryView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ItemCategoryView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ItemCategoryView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ItemCategoryView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold> 
        
        initComponents();
        
         //set enter and space key actions
        setButtonForEnter(btnAdd);
        setButtonForEnter(btnUpdate);
        setButtonForEnter(btnDelete);
        setButtonForEnter(btnCancel);
        
        setLocationRelativeTo(null);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        panelCategory = new javax.swing.JPanel();
        lblCategoryName = new javax.swing.JLabel();
        lblParent = new javax.swing.JLabel();
        comboParent = new javax.swing.JComboBox();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        txtCategoryName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        categoryTree = new javax.swing.JTree();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 82, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 151, Short.MAX_VALUE)
        );

        jButton4.setText("jButton4");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Item Category Setup");
        setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lblCategoryName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCategoryName.setText("Category Name *:");

        lblParent.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblParent.setText("Parent Category :");

        comboParent.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        comboParent.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "parent"}));
        comboParent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboParentActionPerformed(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAdd.setMnemonic('A');
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnUpdate.setMnemonic('U');
        btnUpdate.setText("Update");

        btnDelete.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDelete.setMnemonic('D');
        btnDelete.setText("Delete");

        btnCancel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCancel.setMnemonic('C');
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        txtCategoryName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtCategoryName.setAutoscrolls(false);
        txtCategoryName.setName(""); // NOI18N
        txtCategoryName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCategoryNameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelCategoryLayout = new javax.swing.GroupLayout(panelCategory);
        panelCategory.setLayout(panelCategoryLayout);
        panelCategoryLayout.setHorizontalGroup(
            panelCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCategoryLayout.createSequentialGroup()
                .addGroup(panelCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelCategoryLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(panelCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblCategoryName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblParent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(comboParent, 0, 178, Short.MAX_VALUE)
                            .addComponent(txtCategoryName)))
                    .addGroup(panelCategoryLayout.createSequentialGroup()
                        .addContainerGap(13, Short.MAX_VALUE)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancel)))
                .addContainerGap())
        );
        panelCategoryLayout.setVerticalGroup(
            panelCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCategoryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblParent)
                    .addComponent(comboParent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnDelete)
                    .addComponent(btnUpdate)
                    .addComponent(btnAdd))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        categoryTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        categoryTree.setToolTipText("Category List");
        jScrollPane1.setViewportView(categoryTree);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        //ConnectDatabase connection = new ConnectDatabase();
        //connection.connetDatabase();
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelActionPerformed

    private void comboParentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboParentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboParentActionPerformed

    private void txtCategoryNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCategoryNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCategoryNameActionPerformed
/*
    public void addListenerToAdd(ActionListener addListener){
        btnAdd.addActionListener(addListener);
    }

*/
    //listener for button;
    public void addListenerToButton(ActionListener addListener){
        btnAdd.addActionListener(addListener);
        btnUpdate.addActionListener(addListener);
        btnDelete.addActionListener(addListener);
        btnCancel.addActionListener(addListener);
    }
    
    //listener for tree
    public void addListenerToTree(TreeSelectionListener treeListener){
        categoryTree.addTreeSelectionListener(treeListener);
    }
    
    //focus listener
    public void addFoucsListenerToField(FocusListener f){
        txtCategoryName.addFocusListener(f);
    }
    //key register to btn
    public final void setButtonForEnter(JButton jb){
         jb.registerKeyboardAction(jb.getActionForKeyStroke(
                                       KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),
                                      KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),
                                      JComponent.WHEN_FOCUSED);
 
        jb.registerKeyboardAction(jb.getActionForKeyStroke(
                                      KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),
                                      KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),
                                      JComponent.WHEN_FOCUSED);
        
    }
    //set category parent;
    public void setSelectedParent(String parent){
       model.setSelectedItem(parent);
    }
   
    //get category name
     public String getCategory(){
        return txtCategoryName.getText().trim().toUpperCase();
    }
    
    public String getParentCategory(){
        return comboParent.getSelectedItem().toString();
    }
    //set category name;
    public void setCategoryName(String name){
        cName = name;
        this.txtCategoryName.setText(cName);
        //JOptionPane.showMessageDialog(null,name);
    }
   
    //return category id for update and delete
    public int getCategoryId(){
        return categoryId;
    }
    
    public String getOldParent(){
        return oldParent;
    }
    public String getOldCategoryName(){
        return oldCategoryName;
    }
    //after selecting the tree node;
    public void setCategoryDetails(String[] c){
        categoryId = Integer.parseInt(c[0]);
        oldParent = c[2];//c[1];//c[2];
        oldCategoryName = c[1];
        model.setSelectedItem(oldParent);
        cName = c[1];
       // System.out.println(cName);
        txtCategoryName.setText(cName.trim());
        txtCategoryName.setVisible(true);
        //JOptionPane.showMessageDialog(null,txtCategoryName.getText());
    }
    
    //prepare category parent;
    public void setCategory(String[] category){
        String[] categoryList = new String[category.length+1];
        categoryList[0] = "root";
        for(int i = 1; i <= category.length; i++){
            categoryList[i] = category[i-1];
           
        }
        //JOptionPane.showMessageDialog(null, categoryList);
        model = new DefaultComboBoxModel(categoryList);
        model.setSelectedItem("root");
        comboParent.setModel(model);   
    }
    
    //clear Frame;
    public void clearFrame(){
        txtCategoryName.setText("");
        model.setSelectedItem("root");
    }
    
    public void clearErrorTextField(){
        txtCategoryName.setBorder(BorderFactory.createLineBorder(Color.WHITE));
    }
    public void setTree(DefaultTreeModel m){
        treeModel = m;
        categoryTree.setModel(treeModel);
        //allows only one selection at a timie;
        categoryTree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
    }
    
    public void addKeyListenerToBtn(KeyListener key){
        btnAdd.addKeyListener(key);
        btnUpdate.addKeyListener(key);
        btnDelete.addKeyListener(key);
        btnCancel.addKeyListener(key);
    }
    
    /*public Hashtable categoryTree(Hashtable category){
        return category;
    }
    * */
    public static void main(String[] args){
        
    }
    
    private String oldCategoryName; //used when updating 
    private String oldParent;
    private int categoryId;
    private String cName;
    private DefaultTreeModel treeModel;
    private DefaultComboBoxModel model;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JTree categoryTree;
    private javax.swing.JComboBox comboParent;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCategoryName;
    private javax.swing.JLabel lblParent;
    private javax.swing.JPanel panelCategory;
    private javax.swing.JTextField txtCategoryName;
    // End of variables declaration//GEN-END:variables
}
