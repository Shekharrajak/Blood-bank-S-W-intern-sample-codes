/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package centerstore.issue;

import java.awt.KeyEventDispatcher;
import java.awt.KeyboardFocusManager;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.ListSelectionModel;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import reusableClass.Function;
import reusableClass.Validator;


/**
 *
 * @author SUSHIL
 */
public class IssueView extends javax.swing.JDialog {

    /**
     * Creates new form IssueView
     */
    private int ItemId ;
    private int UnitId ;
    private int IssueId;
    private String ExpiryDate;
    private float UnitRelativeQuantity =0;
    private String UnitType;
    private String ItemBaseUnit;
    private float TotalQty  = 0;
    private int FromStoreId ;
    private int ToStoreId;
    ListSelectionModel  selectionModel;
     //listening through the keyboard shortcut
    private KeyboardFocusManager kfmanager;
    public IssueView(JFrame parent,boolean modal) {
        super(parent,modal);
        initComponents();
        hidePrintbtn();
        hideResturant();
        disableEditBtn();
        disableIssueBtn();
        setButtonForEnter(btnIssue);
        setButtonForEnter(btnEdit);
        setButtonForEnter(btnCancel);
        setButtonForEnter(btnSearch);
        txtCenterStockQuantity.addFocusListener(new Function.SetTextFieldFocusListener(txtCenterStockQuantity));
        txtIssueQuantity.addFocusListener(new Function.SetJFormattedTextFieldFocusListener(txtIssueQuantity));
        txtResturantStockQuantity.addFocusListener(new Function.SetTextFieldFocusListener(txtResturantStockQuantity));
        txtSearch.addFocusListener(new Function.SetTextFieldFocusListener(txtSearch));
        selectionModel = tblIssueList.getSelectionModel();
        selectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        kfmanager = KeyboardFocusManager.getCurrentKeyboardFocusManager();
        /*
        making the float field only or issue quantity
        */
        Validator.DecimalMaker(txtIssueQuantity);
        /* hides all search bar
        */
        jLabel2.setVisible(false);
        btnSearch.setVisible(false);
        txtSearch.setVisible(false);
//        setModal(modal);
        
         /*
         * centering the frame
         */
        setLocationRelativeTo(null);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtCenterStockQuantity = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        comboFrom = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        comboTo = new javax.swing.JComboBox();
        comboItemBaseUnit = new javax.swing.JComboBox();
        lblrestro = new javax.swing.JLabel();
        lblstockqty = new javax.swing.JLabel();
        txtResturantStockQuantity = new javax.swing.JTextField();
        comboItemName = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        txtIssueQuantity = new javax.swing.JFormattedTextField();
        btnIssue = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblIssueList = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Issue Window");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel2.setFont(jLabel2.getFont().deriveFont(jLabel2.getFont().getSize()+3f));
        jLabel2.setForeground(new java.awt.Color(102, 102, 255));
        jLabel2.setText("Search for the Item to issue");

        txtSearch.setFont(txtSearch.getFont().deriveFont(txtSearch.getFont().getSize()+3f));
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        btnSearch.setFont(btnSearch.getFont().deriveFont(btnSearch.getFont().getSize()+3f));
        btnSearch.setMnemonic('S');
        btnSearch.setText("Search");

        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getSize()+3f));
        jLabel1.setText("Item Name:");

        jLabel3.setFont(jLabel3.getFont().deriveFont(jLabel3.getFont().getSize()+3f));
        jLabel3.setText("Stock Quantity:");

        txtCenterStockQuantity.setFont(txtCenterStockQuantity.getFont().deriveFont(txtCenterStockQuantity.getFont().getSize()+3f));
        txtCenterStockQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCenterStockQuantityActionPerformed(evt);
            }
        });

        jLabel4.setFont(jLabel4.getFont().deriveFont(jLabel4.getFont().getSize()+3f));
        jLabel4.setText("Issue Quantity:");

        jLabel5.setFont(jLabel5.getFont().deriveFont(jLabel5.getFont().getSize()+3f));
        jLabel5.setText("Item Base Unit:");

        jLabel6.setFont(jLabel6.getFont().deriveFont(jLabel6.getFont().getSize()+3f));
        jLabel6.setText("From:");

        comboFrom.setFont(comboFrom.getFont().deriveFont(comboFrom.getFont().getSize()+3f));
        comboFrom.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CenterStore" }));

        jLabel7.setFont(jLabel7.getFont().deriveFont(jLabel7.getFont().getSize()+3f));
        jLabel7.setText("To:");

        comboTo.setFont(comboTo.getFont().deriveFont(comboTo.getFont().getSize()+3f));
        comboTo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Resturant" }));

        comboItemBaseUnit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lblrestro.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        lblrestro.setText("in Resturant Store");

        lblstockqty.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblstockqty.setText("Stock Quantity:");
        lblstockqty.setMaximumSize(new java.awt.Dimension(30, 14));

        txtResturantStockQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtResturantStockQuantityActionPerformed(evt);
            }
        });

        jLabel8.setText("CenterStore");

        txtIssueQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIssueQuantityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtCenterStockQuantity)
                            .addComponent(comboFrom, 0, 100, Short.MAX_VALUE)
                            .addComponent(txtIssueQuantity))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(10, 10, 10)
                                            .addComponent(lblrestro))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(lblstockqty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtResturantStockQuantity)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(comboTo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comboItemBaseUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(comboItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(114, 114, 114))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSearch)
                .addGap(38, 38, 38))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch)
                    .addComponent(jLabel2))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCenterStockQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(comboItemBaseUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIssueQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblstockqty, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtResturantStockQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addComponent(lblrestro)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(comboFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(comboTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnSearch, comboItemBaseUnit, comboItemName, txtIssueQuantity, txtSearch});

        btnIssue.setFont(btnIssue.getFont().deriveFont(btnIssue.getFont().getSize()+3f));
        btnIssue.setMnemonic('I');
        btnIssue.setText("Issue");

        btnEdit.setFont(btnEdit.getFont().deriveFont(btnEdit.getFont().getSize()+3f));
        btnEdit.setMnemonic('E');
        btnEdit.setText("Edit");

        btnCancel.setFont(btnCancel.getFont().deriveFont(btnCancel.getFont().getSize()+3f));
        btnCancel.setMnemonic('C');
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnPrint.setFont(btnPrint.getFont().deriveFont(btnPrint.getFont().getSize()+3f));
        btnPrint.setMnemonic('P');
        btnPrint.setText("Print");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Issued Item List"));

        tblIssueList.setAutoCreateRowSorter(true);
        tblIssueList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblIssueList.setRequestFocusEnabled(false);
        tblIssueList.setRowHeight(20);
        jScrollPane1.setViewportView(tblIssueList);
        tblIssueList.getTableHeader().setReorderingAllowed(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(btnIssue, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(btnCancel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIssue)
                    .addComponent(btnEdit)
                    .addComponent(btnCancel)
                    .addComponent(btnPrint))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPrintActionPerformed

    private void txtResturantStockQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtResturantStockQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtResturantStockQuantityActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtIssueQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIssueQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIssueQuantityActionPerformed

    private void txtCenterStockQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCenterStockQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCenterStockQuantityActionPerformed
 public String getcomboItemName(){
    return comboItemName.getSelectedItem().toString();
}
 
 public void  setcomboItemName(String[] ItemName){
    // comboItemName.setSelectedItem(ItemName);
     modelItemName  = new DefaultComboBoxModel(ItemName) ;
     //comboItemName = setModel(modelItemName);
      comboItemName.setModel(modelItemName);
     
 }
 
 public String getcomboItemBaseUnit(){
    return comboItemBaseUnit.getSelectedItem().toString();
}
 public void setComboItemBaseUnitSelected(String sel){
     comboItemBaseUnit.setSelectedItem(sel);
 }
 /*
  * polymorphism
  */
 public void  setcomboItemBaseUnit(String[] ItemName){
    // comboItemName.setSelectedItem(ItemName);
     modelItemBaseUnit  = new DefaultComboBoxModel(ItemName) ;
     //comboItemName = setModel(modelItemName);
      comboItemBaseUnit.setModel(modelItemBaseUnit);
     
 }
 public void  setcomboItemBaseUnit(Object[] ItemName){
    // comboItemName.setSelectedItem(ItemName);
     modelItemBaseUnit  = new DefaultComboBoxModel(ItemName) ;
     //comboItemName = setModel(modelItemName);
      comboItemBaseUnit.setModel(modelItemBaseUnit);
     
 }
 public String getcomboIssueTo(){
     return comboTo.getSelectedItem().toString();
 }
 public void setcomboIssueTo(String issueto){
     comboTo.setSelectedItem(issueto);
 }
 public void setcomboIssueTo(Object[] item){
     DefaultComboBoxModel model = new DefaultComboBoxModel(item);
     comboTo.setModel(model);
 }
 public String getcomboIssuefrom(){
     return comboFrom.getSelectedItem().toString();
 }
 public void setcomboIssueFrom(String issuefrom){
     comboFrom.setSelectedItem(issuefrom);
 }
 public void setcomboIssueFrom(Object[] item){
     DefaultComboBoxModel model = new DefaultComboBoxModel(item);
     comboFrom.setModel(model);
 }
 public JComboBox returnComboStoreFrom(){
     return comboFrom;
 }
 public JComboBox returnComboStoreTo(){
     return comboTo;
 }
 public int getFromStoreId(){
     return FromStoreId;
 }
 public void setFromStoreId(int id){
     FromStoreId = id;
 }
 public int getToStoreId(){
     return ToStoreId;
 }
 public void setToStoreId(int id){
     ToStoreId = id;
 }
 /*
  * setItemBaseUnit is only for storing the prevoius value before it get relative quanatity
  */
 public void setItemBaseUnit(String BaseUnit){
     ItemBaseUnit = BaseUnit;
 }
 public String getItemBaseUnit(){
     return ItemBaseUnit;
 }
 
 //public void setcomboItemName()
 public int getItemId(){
     return ItemId;
 }
 public void setItemId( int ItemId){
    this.ItemId = ItemId;
 }
  public int getIssueId(){
     return IssueId;
 }
 public void setIssueId( int IssueId){
    this.IssueId = IssueId;
 }
 public int getUnitId(){
     return UnitId;
 }
 public void setUnitId( int UnitId){
    this.UnitId = UnitId;
 }
 public Float getIssueQuantity(){
     return new Float(((Number)txtIssueQuantity.getValue()).floatValue());
 }
 public void setIssueQuantity(float quantity){
     txtIssueQuantity.setValue(new Float(quantity));
 }
 public float getTotalQty(){
     return TotalQty ;
 }
 public void setTotalQty(float quantity){
     TotalQty = quantity;
 }
 public String getCenterStockQuantity(){
     return txtCenterStockQuantity.getText();
 }
 
 public void setCenterStockQuantity(String stock){
     txtCenterStockQuantity.setText(stock);
 }
  public String getResturantStockQuantity(){
     return txtResturantStockQuantity.getText();
 }
 
 public void setResturantStockQuantity(String stock){
     txtResturantStockQuantity.setText(stock);
 }
 public void setUnitRelativeQuantity(float rel){
     UnitRelativeQuantity = rel;
 }
 public float getUnitRelativeQuantity(){
     return UnitRelativeQuantity;
 }
 public void setUnitType(String type){
      UnitType = type;
 }
 public String getUnitType(){
     return UnitType;
 }
 public void setRestro(String st){
     lblrestro.setText(st);
 }
 public String getRestro(){
     return lblrestro.getText();
 }
 public void  showResturant(){
    lblrestro.setVisible(true);
        lblstockqty.setVisible(true);
        txtResturantStockQuantity.setVisible(true);  
        
  }
 public void hideResturant(){
      lblrestro.setVisible(false);
        lblstockqty.setVisible(false);
        txtResturantStockQuantity.setVisible(false);
 }
 public void enableIssueBtn(){
     btnIssue.setEnabled(true);
 }
 public void disableIssueBtn(){
     btnIssue.setEnabled(false);
 }
 public void enableEditBtn(){
     btnEdit.setEnabled(true);
 }
 public void disableEditBtn(){
     btnEdit.setEnabled(false);
 }
 
 public void setExpiryDate(String date){
     DateFormat dateformat = new SimpleDateFormat("yyyy-MM-dd");
        try {
          //  System.out.println(date);
            ExpiryDate = dateformat.format(dateformat.parse(date));
          //  System.out.println(ExpiryDate);
        } catch (Exception ex) {
           // Logger.getLogger(IssueView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, ex+"from set Expiry data");
        }
    // ExpiryDate = date;
 }
 public String getExpiryDate(){
     return ExpiryDate;
 }
 public String getSearch(){
     return txtSearch.getText();
 }
 public void setSearch(String search){
     txtSearch.setText(search);
 }
 public String getFrom(){
     return comboFrom.getSelectedItem().toString();
 }
 public void setForm(String from){
     comboFrom.setSelectedItem(from);
 }
 public String getTo(){
     return comboTo.getSelectedItem().toString();
 }
 public void setTo(String to){
     comboTo.setSelectedItem(to);
 }
 public void refreshJTable(DefaultTableModel dataModel){

//     selectionModel  = tblIssueList.getSelectionModel();
//        selectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    tblIssueList.setModel(dataModel);
    


}
 
 public void setTextEditableTrue(){
   txtCenterStockQuantity.setEditable(true);
   txtResturantStockQuantity.setEditable(true);
   //txtStockQuantity.setEditable(true);
   //txtDistributor.setEditable(true);
 //  txtItemBaseUnit.setEditable(true);
}
public void setTextEditableFalse(){
     txtCenterStockQuantity.setEditable(false);
     txtResturantStockQuantity.setEditable(false);
   //txtStockQuantity.setEditable(true);
   //txtDistributor.setEditable(true);
 //  txtItemBaseUnit.setEditable(false);
    
}
 public  void clearAll(){
     //txtItemBaseUnit.setText("");
     
     
     comboFrom.setSelectedIndex(0);
     comboItemName.setSelectedIndex(0);
     comboTo.setSelectedIndex(0);
   //  txtItemBaseUnit.setText("");
//     comboItemBaseUnit.setSelectedIndex(0);
     txtSearch.setText("");
     txtCenterStockQuantity.setText("");
     txtIssueQuantity.setText("");
     IssueId = 0;
     ItemId = 0;
     //setExpiryDate("");
 }
 
 public String[] getIssueInfo(){
     String[] info = new String [9];
     info[0] = String.valueOf(getItemId());
     info[1] = getcomboItemName();
     info[2] = getCenterStockQuantity();
     info[3] = String.valueOf(getIssueQuantity());
     info[4] = String.valueOf(getUnitId());
    // info[5] = getItemBaseUnit();
     info[5] = getcomboItemBaseUnit();
//     info[6] = getFrom();
//     info[7] = getTo();
      info[6] = String.valueOf(getFromStoreId());
     info[7] = String.valueOf(getToStoreId());
     info[8] = getExpiryDate().toString();
     return info;
 }
 /*
  * this is called when the edit button clicked
  */
 public String[] getIssueEditInfo(){    
     String[] info = new String [8];
     
  
     info[0] = String.valueOf(getIssueId());
     info[1] = String.valueOf(getUnitId());
     info[2] =  getCenterStockQuantity();
     info[3] = getResturantStockQuantity();
     info[4] =  String.valueOf(getIssueQuantity());
//     info[5] = getFrom();
//     info[6] = getTo();
      info[5] = String.valueOf(getFromStoreId());
     info[6] = String.valueOf(getToStoreId());
     info[7] = getExpiryDate();
    
     return info;
 }
  /**
     * It Set all the value from parameter to the respective textfield
     * @param issuedata 
     */
 public void  setIssueInfo(String[] issuedata ){
     /*
      "Issue Id","Item Name","Issue Quantity","Item BaseUnit","Issue From","Issue To","Issue Date"};
      * */
    // String [] info = new String [];
     setIssueId(Integer.parseInt(issuedata[0]));
     //this convert single string to the array of string
     setcomboItemName(new String[]{issuedata[1]});
     setIssueQuantity(Float.valueOf(issuedata[2]));
     setcomboItemBaseUnit(new String[]{issuedata[3]});
     setcomboIssueFrom(new String[]{issuedata[4]});
     setcomboIssueTo(new String[]{issuedata[5]});
     //selecting them
     setcomboIssueFrom(issuedata[4]);
     setcomboIssueTo(issuedata[5]);
     setExpiryDate(issuedata[6]);
     setRestro("in "+ issuedata[5]);
//     setiss
    // setis
    //set
     
 }
 /*
  * this set the  item id,stock quantiy, unit id,unit name
  */
 public void setOnComboItemNameSelect(Object[] info){
      /*
       * SELECT centerstore_stock.item_id,centerstore_stock.item_name,centerstore_stock.unit_id,item_unit.unit_name,item_unit.unit_relative_quantity,item_unit.unit_type,centerstore_stock.total_qty,centerstore_stock.item_expiry_date 
       * FROM centerstore_stock,item_unit 
       * WHERE centerstore_stock.unit_id = item_unit.unit_id"
       */
     try{
   setItemId(Integer.parseInt(info[0].toString()));
     
   setUnitId(Integer.parseInt(info[2].toString()));
     
   setItemBaseUnit(info[3].toString());
     setUnitRelativeQuantity(Float.parseFloat(info[4].toString()));
     setUnitType(info[5].toString());
     setTotalQty(Float.parseFloat(info[6].toString()));
     setCenterStockQuantity(String.valueOf((float)Float.parseFloat(info[6].toString())/Float.parseFloat(info[4].toString())));
    //System.out.println(String.valueOf(Float.parseFloat(info[6].toString())/Float.parseFloat(info[4].toString())));
     setExpiryDate(info[7].toString());
     }
    // for(String in:info){
      //   System.out.println(in);
     //}
     catch(Exception e){
         JOptionPane.showMessageDialog(rootPane, e+"serOnComboItemNameSelect");
     }
    // System.out.println(info);
     
 }
 public void showPrintbtn(){
     btnPrint.setVisible(true);
 }
 public  void hidePrintbtn(){
     btnPrint.setVisible(false);
 }

    public JComboBox getComboItemName() {
        return comboItemName;
    }

    public JTable getTblIssueList() {
        return tblIssueList;
    }
 
 //adding delaget for listening fore keyboard shortcut through out the frame
     public void addShortcutForIssue(KeyEventDispatcher Listen){
         kfmanager.addKeyEventDispatcher(Listen);
     }
 
 void addIssueListener(ActionListener ListenForIssue){
     btnIssue.addActionListener(ListenForIssue);
 }
 void addKeyIssueListener(KeyListener ListenForIssue){
     btnIssue.addKeyListener(ListenForIssue);
 }
 void addPrintListener(ActionListener ListenForPrint){
     btnPrint.addActionListener(ListenForPrint);
 }
 void addKeyPrintListener(KeyListener ListenForPrint){
     btnPrint.addKeyListener(ListenForPrint);
 }
 void addEditListener(ActionListener ListenForEdit){
     btnEdit.addActionListener(ListenForEdit);
 }
 void addKeyEditListener(KeyListener ListenForEdit){
     btnEdit.addKeyListener(ListenForEdit);
 }
 void addCancelListener(ActionListener ListenForCancel){
     btnCancel.addActionListener(ListenForCancel);
 }
 void addKeyCancelListener(KeyListener ListenForCancel){
     btnCancel.addKeyListener(ListenForCancel);
 }
 void addSearchListener(ActionListener ListenForSearch){
     btnSearch.addActionListener(ListenForSearch);
 }
 void addKeySearchListener(KeyListener ListenForSearch){
     btnSearch.addKeyListener(ListenForSearch);
 }
 /*
  * when item is enter in search textfeild and enter is press
  */
 void addTextSearchListener(ActionListener ListenForSearch){
     txtSearch.addActionListener(ListenForSearch);
 }
 /*
  * adding the listner for the row selection in the table
  */
 void addRowSelectedListener(ListSelectionListener ListenForRowSelect){
     selectionModel.addListSelectionListener(ListenForRowSelect);
 }
 /*
  * this id for add listener to the combobox
  */
 void addComboItemNameSelectListener(ActionListener ListenForSelect){
     comboItemName.addActionListener(ListenForSelect);
 }
 /*
  * this is for adding listener for itembaseunit when is  selected by user
  */
 void addComboItemBaseUnitSelectListener(ActionListener ListenForSelect){
     comboItemBaseUnit.addActionListener(ListenForSelect);
 }
 void addComboStoreToListener(ActionListener Listen){
     comboTo.addActionListener(Listen);
 }
 void addComboStoreFromListener(ActionListener Listen){
     comboFrom.addActionListener(Listen);
 }
 //add the documentlistener for the search 
 void addtxtSearchDocumentListener(DocumentListener listen){
     txtSearch.getDocument().addDocumentListener(listen);
 }
  public void AddSelectInCombo(JComboBox jc){
      jc.insertItemAt("SELECT", 0);
      jc.setSelectedIndex(0);
    }
  public JComboBox returnComboItemName(){
      return comboItemName;
  }
   public final void setButtonForEnter(JButton jb){
         jb.registerKeyboardAction(jb.getActionForKeyStroke(
                                      KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),
                                      KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),
                                      JComponent.WHEN_FOCUSED);
 
        jb.registerKeyboardAction(jb.getActionForKeyStroke(
                                      KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),
                                      KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),
                                      JComponent.WHEN_FOCUSED);
        
    }
 
    /**
     * 
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IssueView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IssueView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IssueView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IssueView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IssueView(new JFrame(),true);
            }
        });
    }
    private DefaultComboBoxModel modelItemName;
    private DefaultComboBoxModel modelItemBaseUnit;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnIssue;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox comboFrom;
    public javax.swing.JComboBox comboItemBaseUnit;
    public javax.swing.JComboBox comboItemName;
    private javax.swing.JComboBox comboTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel lblrestro;
    private javax.swing.JLabel lblstockqty;
    public javax.swing.JTable tblIssueList;
    private javax.swing.JTextField txtCenterStockQuantity;
    private javax.swing.JFormattedTextField txtIssueQuantity;
    private javax.swing.JTextField txtResturantStockQuantity;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

   
}
